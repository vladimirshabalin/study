<?php
// Открывающий тек php, для начала работы скрипта

$a = 5;
// $ - обозначает переменную
// a - имя переменной
// = - выполняет функцию присвоения
// 5 - значение типа integer (целое число) - в данном случае 5
// полностью строка читется - Присвой переменной a значение типа integer 5

$b = '05';
// $ - обозначает переменную
// b - имя переменной
// = - выполняет функцию присвоения
// 5 - значение типа string (строка) - в данном случае это убдет не число 05, а строка с символами 05
// полностью строка читется - Присвой переменной b значение типа string 05

var_dump($a == $b);
// переменная а имеет числовое значение 5, а переменная b имеет строковое значение 05.
// функция var_dump - выводит на экран результат сравнения - либа они равны (true), либо нет(false)
// PHP преобразует типы переменных для сравнения. в данном случае переменная b будет преобразована в число 05, то есть в 5
// ну и 5 будет равно 5, поэтому true

var_dump((int)'012345');
// потому что int преобразует строку в число 12345

var_dump((float)123.0 === (int)123.0);
// потому что типы переменных разные. float - число с плавающей точкой (дробное), а int - целое число
// так же идет жесткое сравнение не только содержимого переменной, но и типа данных из-за тройного ровно,
// поэтому php не может преобразовать типы переменных и они сравниваются как есть. хоть числа и равно, но тип данных нет
// поэтому и false, хотя если бы было 2 ровно, было бы true

var_dump((int)0 === (int)'hello, world');
// сраниваем целое число 0 и строку 'hello, world', которая не содержит ни одного числа, поэтому при приведении к типу
// int, строка 'hello, world' будет иметь значение 0. Ну а 0 равен 0, поэтому true

// закрывающий тег php не нужен если после него не идет код html, поэтому в методичке его можно убрать :)
?>